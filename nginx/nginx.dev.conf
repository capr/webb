worker_processes  12;
user root root;

events {
	worker_connections 1024;
}

env LUA_PATH;
env LUA_CPATH;

http {
	include mime.types;

	# this will stay off for a looong time.
	lua_code_cache off;

	server {
		listen 80;

		# compress all text data
		gzip on;
		gzip_min_length 1000;
		gzip_types text/plain;
		gzip_types application/json;
		gzip_types application/javascript;
		gzip_types text/css;

		# serve static files first and fallback to Lua scripts
		location / {
			root ../www;
			try_files $uri @lua;
		}

		# hide all the source code
		location ~ \.(lua|lp|cat)$ {
			default_type text/html;
			content_by_lua_file '../www/ngx.lua';
		}

		# serve all dynamic content through a single Lua entry-point
		location @lua {
			default_type text/html;
			content_by_lua_file '../www/ngx.lua';
		}

		#listen 443 ssl;

		#ssl_certificate_key /etc/ssl/certs/shop-usa.key;
		#ssl_certificate     /etc/ssl/certs/shop-usa.crt;

		# ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL';
		#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;

		#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		#ssl_session_cache shared:SSL:10m;

		#ssl_prefer_server_ciphers on;
		#ssl_dhparam /etc/ssl/certs/dhparam.pem;

		#add_header Strict-Transport-Security max-age=63072000;
		#add_header X-Frame-Options DENY;
		#add_header X-Content-Type-Options nosniff;
	}

}
